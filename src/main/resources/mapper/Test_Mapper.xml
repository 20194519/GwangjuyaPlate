<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.project.proc.Test" >
    <insert id="kakaoJoin" parameterType="com.smart.project.web.home.vo.KakaoMemberVO">
        insert ignore into table_join (userEmail,userName) values (#{email},#{nickname})
    </insert>

    <insert id="insertMember" parameterType="com.smart.project.web.home.vo.CommonMemberVO">
        insert into table_join(userId,userEmail,userPw,userName,userPhoneNum) values
            (#{userId},#{userEmail},#{userPw},#{userName},#{userPhoneNum})
    </insert>

    <select id="idCount" parameterType="string" resultType="int">
        select count(*) from table_join where userId = #{userId}
    </select>

    <select id="selectMango2" resultType="com.smart.project.web.home.vo.MangoVO" parameterType="java.lang.String">
        SELECT * FROM foodlist where  mainmenu like concat('%',#{search},'%') or name like concat('%',#{search},'%') or roadname like concat('%',#{search},'%') or foodtype like concat('%',#{search},'%')
    </select>

    <select id="selectMango2All" resultType="com.smart.project.web.home.vo.MangoVO">
        SELECT * FROM foodlist
    </select>

    <select id="selectName" resultType="com.smart.project.web.home.vo.MangoVO" parameterType="java.lang.String">
        SELECT * FROM foodlist where  name= #{name}
    </select>

    <select id="searchAll" resultType="com.smart.project.web.home.vo.MangoVO" parameterType="com.smart.project.web.home.vo.Criteria">
        SELECT * FROM foodlist where  mainmenu like concat('%',#{search},'%') or name like concat('%',#{search},'%') or roadname like concat('%',#{search},'%') or foodtype like concat('%',#{search},'%')
        limit #{pageStart},#{perPageNum} ;

    </select>


    <select id="totalCount" resultType="int" parameterType="com.smart.project.web.home.vo.Criteria">
        SELECT count(*) FROM foodlist where  mainmenu like concat('%',#{search},'%') or name like concat('%',#{search},'%') or roadname like concat('%',#{search},'%') or foodtype like concat('%',#{search},'%')
    </select>

    <select id="getMangoVO" resultType="com.smart.project.web.home.vo.MangoVO" parameterType="java.lang.String">
        SELECT * FROM foodlist where name = #{name}
    </select>

    <insert id="insertWish" parameterType="com.smart.project.web.home.vo.WishListVO">
        insert into wishList_tbl(useremail, placename, roadname, mainimg)
        select #{useremail},#{placename},#{roadname},#{mainimg}
        from dual where not exists (select useremail, placename from wishList_tbl where useremail = #{useremail} and placename = #{placename})
    </insert>

    <select id="selectWish" resultType="com.smart.project.web.home.vo.WishListVO">
        select * from wishList_tbl where useremail=#{useremail}
    </select>

    <delete id="wishDelete" parameterType="com.smart.project.web.home.vo.WishListVO">
        delete from wishList_tbl where useremail=#{useremail} and placename = #{placename}
    </delete>

    <update id="viewCount" parameterType="java.lang.String">
        update foodlist set viewCount = viewCount + 1 where name = #{name}
    </update>
    <insert id="saveReview">
        insert into tbl_review (
            id,
            title,
            review,
            grade,
            update_date
        )
        values (
                   #{id},
                   #{title},
                   #{review},
                   #{grade},
                   UTC_TIMESTAMP()
               ) on duplicate key
        update
            title = #{title},
            review = #{review},
            grade = #{grade},
            update_date = UTC_TIMESTAMP()
    </insert>

    <select id="getReviewsByKeySet" resultType="com.smart.project.web.home.vo.ReviewDTO">
        select
        r.id,
        r.title,
        r.review,
        r.grade,
        DATE_FORMAT(r.update_date, '%Y%m%d%H%i%s') as review_up_date_str,
        f.file_id,
        f.file_name,
        f.file_size,
        f.content_type,
        DATE_FORMAT(f.update_date, '%Y%m%d%H%i%s') as file_up_date_str
        from
        tbl_review r
        left join
        tbl_file_info f
        on
        f.file_id = (
        select
        file_id
        from
        tbl_file_info file
        where
        file.review_id = r.id
        limit 1
        )
        <where>
            <if test="reviewUpdateDate != null and reviewId != null">
                r.update_date <![CDATA[<=]]> #{reviewUpdateDate}
                and
                r.id <![CDATA[<]]> #{reviewId}
            </if>
        </where>
        order by r.update_date, r.id desc
        limit 10
    </select>

    <select id="getReview" resultType="com.smart.project.web.home.vo.ReviewDTO">
        select
            r.id,
            r.title,
            r.review,
            r.grade,
            DATE_FORMAT(r.update_date, '%Y%m%d%H%i%s') as review_up_date_str
        from
            tbl_review r
        where
            r.id = #{reviewId}
    </select>

    <select id="getReviewsForMap" resultType="com.smart.project.web.home.vo.ReviewDTO">
        select
            r.id,
            r.title,
            r.grade,
        from
            tbl_review r
    </select>

    <delete id="deleteReviews">
        delete
        from tbl_review
        <where>
            <foreach collection="reviewIds" item="reviewId" separator="or">
                id = #{reviewId}
            </foreach>
        </where>
    </delete>
</mapper>